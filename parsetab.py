
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERS AND ARRAY AT BEGIN BOOLAND BOOLOR BREAK CASE CLASS COLON COMMA COMMENT COMPX DEF DIVIDE DOLLARSGN DOT DUODOT ELSE ELSIF END ENSURE EQCOMP EQUALS EXPON FALSE FLOAT FOR GREATEQTH GREATH ID IF IN INT LBRACE LBRAKET LESSEQTH LESSTH LPAREN MINUS MINUSEQ MODULE NEW NEXT NIL NOT NOTEQ OR PIPE PLUS PLUSEQ RAT RBRACE RBRAKET RETRY RETURN RPAREN SELF SEMICOLON SET STRING SUPER THEN TILDE TIMES TRIDOT TRUE UNDERSCR UNLESS UNTIL WHEN WHILEinit : cmmdbool : TRUE\n    | FALSE\n    num : INT\n    | FLOAT\n    | RAT\n    | COMPX\n    optr : PLUS\n    | MINUS\n    | TIMES\n    | DIVIDE\n    | MODULE\n    | EXPON\n    optn : num optr numcomptn : obj comptr objcomptr : EQCOMP\n    | LESSTH\n    | LESSEQTH\n    | GREATH\n    | GREATEQTH\n    | NOTEQ\n    var : ID EQUALS obj\n    | ID EQUALS ID\n    | ID EQUALS NIL\n    \n    func : DEF ID LPAREN objs RPAREN cmmd END\n    | DEF ID LPAREN RPAREN cmmd END\n    | DEF ID cmmd END\n    | DEF ID LPAREN objs RPAREN cmmd RETURN obj END\n    | DEF ID LPAREN RPAREN cmmd RETURN obj END\n    | DEF ID cmmd RETURN obj END\n    else : ELSE comptn cmmd\n    | ELSE bool cmmd\n    elsif : ELSIF comptn cmmd\n    | ELSIF bool cmmd\n    elses : else\n    | elsif elses\n    control : IF comptn cmmd END\n    | IF bool cmmd END\n    | IF comptn cmmd elses END\n    | IF bool cmmd elses END\n    control : UNLESS comptn COLON cmmd END\n    | UNLESS bool COLON cmmd END\n    | UNLESS comptn cmmd elses END\n    | UNLESS bool cmmd elses END\n    when : WHEN objs\n    | WHEN objs THEN\n    | WHEN comptn\n    whens : when\n    | when whens\n    control : CASE ID whens else END\n    | CASE ID whens END\n    ids : ID\n    | ID COMMA idsarray : LBRAKET objs RBRAKET\n    | LBRAKET ids RBRAKET\n    | LBRAKET objs COMMA ids RBRAKET\n    | LBRAKET ids COMMA objs RBRAKET\n    struc : SET DOT NEW\n    | SET DOT NEW LPAREN RPAREN\n    | SET DOT NEW LPAREN array RPAREN\n    | SET array\n    objs : obj\n    | obj COMMA objs\n    obj : STRING\n    | num\n    | bool\n    | range\n    | matrix\n    range : LPAREN INT DOT DOT INT RPAREN\n    | INT DOT DOT INT\n    | LPAREN STRING DOT DOT STRING\n    | STRING DOT DOT STRING\n    cmmd : var\n    | func\n    | control\n    | optn\n    matrix : LBRAKET rows RBRAKET rows : row\n    | row COMMA rowsrow : array'
    
_lr_action_items = {'ID':([0,8,11,14,15,16,17,18,19,20,22,23,24,25,26,27,28,31,32,44,60,64,66,73,85,93,105,111,112,113,114,116,117,121,124,142,149,],[7,18,33,-5,-6,-7,41,7,7,7,-2,-3,-64,-65,-67,-68,-4,7,7,-66,92,7,7,7,-15,-77,7,7,7,7,7,-72,-70,92,92,-71,-69,]),'DEF':([0,14,15,16,18,19,20,22,23,24,25,26,27,28,31,32,44,64,66,73,85,93,105,111,112,113,114,116,117,142,149,],[8,-5,-6,-7,8,8,8,-2,-3,-64,-65,-67,-68,-4,8,8,-66,8,8,8,-15,-77,8,8,8,8,8,-72,-70,-71,-69,]),'IF':([0,14,15,16,18,19,20,22,23,24,25,26,27,28,31,32,44,64,66,73,85,93,105,111,112,113,114,116,117,142,149,],[9,-5,-6,-7,9,9,9,-2,-3,-64,-65,-67,-68,-4,9,9,-66,9,9,9,-15,-77,9,9,9,9,9,-72,-70,-71,-69,]),'UNLESS':([0,14,15,16,18,19,20,22,23,24,25,26,27,28,31,32,44,64,66,73,85,93,105,111,112,113,114,116,117,142,149,],[10,-5,-6,-7,10,10,10,-2,-3,-64,-65,-67,-68,-4,10,10,-66,10,10,10,-15,-77,10,10,10,10,10,-72,-70,-71,-69,]),'CASE':([0,14,15,16,18,19,20,22,23,24,25,26,27,28,31,32,44,64,66,73,85,93,105,111,112,113,114,116,117,142,149,],[11,-5,-6,-7,11,11,11,-2,-3,-64,-65,-67,-68,-4,11,11,-66,11,11,11,-15,-77,11,11,11,11,11,-72,-70,-71,-69,]),'INT':([0,9,10,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,39,40,44,45,49,50,51,52,53,54,55,60,64,66,70,73,76,81,82,85,87,93,105,107,111,112,113,114,116,117,118,123,134,142,147,149,],[13,28,28,-5,-6,-7,28,13,13,13,-2,-3,-64,-65,-67,-68,-4,58,13,13,13,-8,-9,-10,-11,-12,-13,-66,28,28,-16,-17,-18,-19,-20,-21,28,13,13,28,13,28,28,28,-15,117,-77,13,28,13,13,13,13,-72,-70,141,28,28,-71,28,-69,]),'FLOAT':([0,9,10,14,15,16,17,18,19,20,22,23,24,25,26,27,28,31,32,34,35,36,37,38,39,40,44,45,49,50,51,52,53,54,55,60,64,66,70,73,76,81,82,85,93,105,107,111,112,113,114,116,117,123,134,142,147,149,],[14,14,14,-5,-6,-7,14,14,14,14,-2,-3,-64,-65,-67,-68,-4,14,14,14,-8,-9,-10,-11,-12,-13,-66,14,14,-16,-17,-18,-19,-20,-21,14,14,14,14,14,14,14,14,-15,-77,14,14,14,14,14,14,-72,-70,14,14,-71,14,-69,]),'RAT':([0,9,10,14,15,16,17,18,19,20,22,23,24,25,26,27,28,31,32,34,35,36,37,38,39,40,44,45,49,50,51,52,53,54,55,60,64,66,70,73,76,81,82,85,93,105,107,111,112,113,114,116,117,123,134,142,147,149,],[15,15,15,-5,-6,-7,15,15,15,15,-2,-3,-64,-65,-67,-68,-4,15,15,15,-8,-9,-10,-11,-12,-13,-66,15,15,-16,-17,-18,-19,-20,-21,15,15,15,15,15,15,15,15,-15,-77,15,15,15,15,15,15,-72,-70,15,15,-71,15,-69,]),'COMPX':([0,9,10,14,15,16,17,18,19,20,22,23,24,25,26,27,28,31,32,34,35,36,37,38,39,40,44,45,49,50,51,52,53,54,55,60,64,66,70,73,76,81,82,85,93,105,107,111,112,113,114,116,117,123,134,142,147,149,],[16,16,16,-5,-6,-7,16,16,16,16,-2,-3,-64,-65,-67,-68,-4,16,16,16,-8,-9,-10,-11,-12,-13,-66,16,16,-16,-17,-18,-19,-20,-21,16,16,16,16,16,16,16,16,-15,-77,16,16,16,16,16,16,-72,-70,16,16,-71,16,-69,]),'$end':([1,2,3,4,5,6,13,14,15,16,22,23,24,25,26,27,28,41,42,43,44,71,75,77,83,93,100,109,115,116,117,126,127,128,129,130,133,136,142,146,149,153,154,],[0,-1,-73,-74,-75,-76,-4,-5,-6,-7,-2,-3,-64,-65,-67,-68,-4,-23,-22,-24,-66,-14,-27,-37,-38,-77,-51,-39,-40,-72,-70,-41,-43,-42,-44,-50,-26,-30,-71,-25,-69,-29,-28,]),'END':([3,4,5,6,13,14,15,16,22,23,24,25,26,27,28,41,42,43,44,46,47,48,68,69,71,74,75,77,78,79,83,84,85,93,95,96,97,98,99,100,101,102,103,104,106,108,109,110,115,116,117,126,127,128,129,130,131,132,133,135,136,137,138,142,146,148,149,152,153,154,],[-73,-74,-75,-76,-4,-5,-6,-7,-2,-3,-64,-65,-67,-68,-4,-23,-22,-24,-66,75,77,83,100,-48,-14,-62,-27,-37,109,-35,-38,115,-15,-77,126,127,128,129,130,-51,-49,-45,-47,-62,133,136,-39,-36,-40,-72,-70,-41,-43,-42,-44,-50,-46,146,-26,-63,-30,-31,-32,-71,-25,153,-69,154,-29,-28,]),'RETURN':([3,4,5,6,13,14,15,16,22,23,24,25,26,27,28,41,42,43,44,46,71,75,77,83,93,100,106,109,115,116,117,126,127,128,129,130,132,133,136,142,146,149,153,154,],[-73,-74,-75,-76,-4,-5,-6,-7,-2,-3,-64,-65,-67,-68,-4,-23,-22,-24,-66,76,-14,-27,-37,-38,-77,-51,134,-39,-40,-72,-70,-41,-43,-42,-44,-50,147,-26,-30,-71,-25,-69,-29,-28,]),'ELSE':([3,4,5,6,13,14,15,16,22,23,24,25,26,27,28,41,42,43,44,47,48,65,67,68,69,71,74,75,77,80,83,85,93,100,101,102,103,104,109,115,116,117,126,127,128,129,130,131,133,135,136,139,140,142,146,149,153,154,],[-73,-74,-75,-76,-4,-5,-6,-7,-2,-3,-64,-65,-67,-68,-4,-23,-22,-24,-66,81,81,81,81,81,-48,-14,-62,-27,-37,81,-38,-15,-77,-51,-49,-45,-47,-62,-39,-40,-72,-70,-41,-43,-42,-44,-50,-46,-26,-63,-30,-33,-34,-71,-25,-69,-29,-28,]),'ELSIF':([3,4,5,6,13,14,15,16,22,23,24,25,26,27,28,41,42,43,44,47,48,65,67,71,75,77,80,83,93,100,109,115,116,117,126,127,128,129,130,133,136,139,140,142,146,149,153,154,],[-73,-74,-75,-76,-4,-5,-6,-7,-2,-3,-64,-65,-67,-68,-4,-23,-22,-24,-66,82,82,82,82,-14,-27,-37,82,-38,-77,-51,-39,-40,-72,-70,-41,-43,-42,-44,-50,-26,-30,-33,-34,-71,-25,-69,-29,-28,]),'EQUALS':([7,],[17,]),'TRUE':([9,10,17,45,49,50,51,52,53,54,55,60,70,76,81,82,107,123,134,147,],[22,22,22,22,22,-16,-17,-18,-19,-20,-21,22,22,22,22,22,22,22,22,22,]),'FALSE':([9,10,17,45,49,50,51,52,53,54,55,60,70,76,81,82,107,123,134,147,],[23,23,23,23,23,-16,-17,-18,-19,-20,-21,23,23,23,23,23,23,23,23,23,]),'STRING':([9,10,17,29,45,49,50,51,52,53,54,55,60,70,76,81,82,86,107,119,123,134,147,],[24,24,24,59,24,24,-16,-17,-18,-19,-20,-21,24,24,24,24,24,116,24,142,24,24,24,]),'LPAREN':([9,10,17,18,45,49,50,51,52,53,54,55,60,70,76,81,82,107,123,134,147,],[29,29,29,45,29,29,-16,-17,-18,-19,-20,-21,29,29,29,29,29,29,29,29,29,]),'LBRAKET':([9,10,17,30,45,49,50,51,52,53,54,55,60,70,76,81,82,94,107,123,134,147,],[30,30,30,60,30,30,-16,-17,-18,-19,-20,-21,30,30,30,30,30,60,30,30,30,30,]),'PLUS':([12,13,14,15,16,],[35,-4,-5,-6,-7,]),'MINUS':([12,13,14,15,16,],[36,-4,-5,-6,-7,]),'TIMES':([12,13,14,15,16,],[37,-4,-5,-6,-7,]),'DIVIDE':([12,13,14,15,16,],[38,-4,-5,-6,-7,]),'MODULE':([12,13,14,15,16,],[39,-4,-5,-6,-7,]),'EXPON':([12,13,14,15,16,],[40,-4,-5,-6,-7,]),'EQCOMP':([14,15,16,20,21,22,23,24,25,26,27,28,32,44,93,104,112,114,116,117,142,149,],[-5,-6,-7,-66,50,-2,-3,-64,-65,-67,-68,-4,-66,-66,-77,50,-66,-66,-72,-70,-71,-69,]),'LESSTH':([14,15,16,20,21,22,23,24,25,26,27,28,32,44,93,104,112,114,116,117,142,149,],[-5,-6,-7,-66,51,-2,-3,-64,-65,-67,-68,-4,-66,-66,-77,51,-66,-66,-72,-70,-71,-69,]),'LESSEQTH':([14,15,16,20,21,22,23,24,25,26,27,28,32,44,93,104,112,114,116,117,142,149,],[-5,-6,-7,-66,52,-2,-3,-64,-65,-67,-68,-4,-66,-66,-77,52,-66,-66,-72,-70,-71,-69,]),'GREATH':([14,15,16,20,21,22,23,24,25,26,27,28,32,44,93,104,112,114,116,117,142,149,],[-5,-6,-7,-66,53,-2,-3,-64,-65,-67,-68,-4,-66,-66,-77,53,-66,-66,-72,-70,-71,-69,]),'GREATEQTH':([14,15,16,20,21,22,23,24,25,26,27,28,32,44,93,104,112,114,116,117,142,149,],[-5,-6,-7,-66,54,-2,-3,-64,-65,-67,-68,-4,-66,-66,-77,54,-66,-66,-72,-70,-71,-69,]),'NOTEQ':([14,15,16,20,21,22,23,24,25,26,27,28,32,44,93,104,112,114,116,117,142,149,],[-5,-6,-7,-66,55,-2,-3,-64,-65,-67,-68,-4,-66,-66,-77,55,-66,-66,-72,-70,-71,-69,]),'COMMA':([14,15,16,22,23,24,25,26,27,28,44,62,63,74,90,91,92,93,104,116,117,120,122,135,142,145,149,150,151,],[-5,-6,-7,-2,-3,-64,-65,-67,-68,-4,-66,94,-80,107,121,123,124,-77,107,-72,-70,-54,-55,-63,-71,-53,-69,-56,-57,]),'RPAREN':([14,15,16,22,23,24,25,26,27,28,44,45,72,74,93,116,117,135,141,142,149,],[-5,-6,-7,-2,-3,-64,-65,-67,-68,-4,-66,73,105,-62,-77,-72,-70,-63,149,-71,-69,]),'COLON':([14,15,16,22,23,24,25,26,27,28,31,32,44,85,93,116,117,142,149,],[-5,-6,-7,-2,-3,-64,-65,-67,-68,-4,64,66,-66,-15,-77,-72,-70,-71,-69,]),'WHEN':([14,15,16,22,23,24,25,26,27,28,33,44,69,74,85,93,102,103,104,116,117,131,135,142,149,],[-5,-6,-7,-2,-3,-64,-65,-67,-68,-4,70,-66,70,-62,-15,-77,-45,-47,-62,-72,-70,-46,-63,-71,-69,]),'RBRAKET':([14,15,16,22,23,24,25,26,27,28,44,61,62,63,74,90,91,92,93,116,117,120,122,125,135,142,143,144,145,149,150,151,],[-5,-6,-7,-2,-3,-64,-65,-67,-68,-4,-66,93,-78,-80,-62,120,122,-52,-77,-72,-70,-54,-55,-79,-63,-71,150,151,-53,-69,-56,-57,]),'THEN':([14,15,16,22,23,24,25,26,27,28,44,74,93,102,104,116,117,135,142,149,],[-5,-6,-7,-2,-3,-64,-65,-67,-68,-4,-66,-62,-77,131,-62,-72,-70,-63,-71,-69,]),'NIL':([17,],[43,]),'DOT':([24,28,56,57,58,59,88,89,],[56,57,86,87,88,89,118,119,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'cmmd':([0,18,19,20,31,32,64,66,73,105,111,112,113,114,],[2,46,47,48,65,67,95,97,106,132,137,138,139,140,]),'var':([0,18,19,20,31,32,64,66,73,105,111,112,113,114,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'func':([0,18,19,20,31,32,64,66,73,105,111,112,113,114,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'control':([0,18,19,20,31,32,64,66,73,105,111,112,113,114,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'optn':([0,18,19,20,31,32,64,66,73,105,111,112,113,114,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'num':([0,9,10,17,18,19,20,31,32,34,45,49,60,64,66,70,73,76,81,82,105,107,111,112,113,114,123,134,147,],[12,25,25,25,12,12,12,12,12,71,25,25,25,12,12,25,12,25,25,25,12,25,12,12,12,12,25,25,25,]),'comptn':([9,10,70,81,82,],[19,31,103,111,113,]),'bool':([9,10,17,45,49,60,70,76,81,82,107,123,134,147,],[20,32,44,44,44,44,44,44,112,114,44,44,44,44,]),'obj':([9,10,17,45,49,60,70,76,81,82,107,123,134,147,],[21,21,42,74,85,74,104,108,21,21,74,74,148,152,]),'range':([9,10,17,45,49,60,70,76,81,82,107,123,134,147,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'matrix':([9,10,17,45,49,60,70,76,81,82,107,123,134,147,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'optr':([12,],[34,]),'comptr':([21,104,],[49,49,]),'rows':([30,94,],[61,125,]),'row':([30,94,],[62,62,]),'array':([30,94,],[63,63,]),'whens':([33,69,],[68,101,]),'when':([33,69,],[69,69,]),'objs':([45,60,70,107,123,],[72,90,102,135,144,]),'elses':([47,48,65,67,80,],[78,84,96,98,110,]),'else':([47,48,65,67,68,80,],[79,79,79,79,99,79,]),'elsif':([47,48,65,67,80,],[80,80,80,80,80,]),'ids':([60,121,124,],[91,143,145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> cmmd','init',1,'p_init','semtic.py',16),
  ('bool -> TRUE','bool',1,'p_bool','semtic.py',20),
  ('bool -> FALSE','bool',1,'p_bool','semtic.py',21),
  ('num -> INT','num',1,'p_num','semtic.py',26),
  ('num -> FLOAT','num',1,'p_num','semtic.py',27),
  ('num -> RAT','num',1,'p_num','semtic.py',28),
  ('num -> COMPX','num',1,'p_num','semtic.py',29),
  ('optr -> PLUS','optr',1,'p_optr','semtic.py',34),
  ('optr -> MINUS','optr',1,'p_optr','semtic.py',35),
  ('optr -> TIMES','optr',1,'p_optr','semtic.py',36),
  ('optr -> DIVIDE','optr',1,'p_optr','semtic.py',37),
  ('optr -> MODULE','optr',1,'p_optr','semtic.py',38),
  ('optr -> EXPON','optr',1,'p_optr','semtic.py',39),
  ('optn -> num optr num','optn',3,'p_optn','semtic.py',44),
  ('comptn -> obj comptr obj','comptn',3,'p_comptn','semtic.py',48),
  ('comptr -> EQCOMP','comptr',1,'p_comptr','semtic.py',52),
  ('comptr -> LESSTH','comptr',1,'p_comptr','semtic.py',53),
  ('comptr -> LESSEQTH','comptr',1,'p_comptr','semtic.py',54),
  ('comptr -> GREATH','comptr',1,'p_comptr','semtic.py',55),
  ('comptr -> GREATEQTH','comptr',1,'p_comptr','semtic.py',56),
  ('comptr -> NOTEQ','comptr',1,'p_comptr','semtic.py',57),
  ('var -> ID EQUALS obj','var',3,'p_var','semtic.py',62),
  ('var -> ID EQUALS ID','var',3,'p_var','semtic.py',63),
  ('var -> ID EQUALS NIL','var',3,'p_var','semtic.py',64),
  ('func -> DEF ID LPAREN objs RPAREN cmmd END','func',7,'p_func','semtic.py',70),
  ('func -> DEF ID LPAREN RPAREN cmmd END','func',6,'p_func','semtic.py',71),
  ('func -> DEF ID cmmd END','func',4,'p_func','semtic.py',72),
  ('func -> DEF ID LPAREN objs RPAREN cmmd RETURN obj END','func',9,'p_func','semtic.py',73),
  ('func -> DEF ID LPAREN RPAREN cmmd RETURN obj END','func',8,'p_func','semtic.py',74),
  ('func -> DEF ID cmmd RETURN obj END','func',6,'p_func','semtic.py',75),
  ('else -> ELSE comptn cmmd','else',3,'p_else','semtic.py',80),
  ('else -> ELSE bool cmmd','else',3,'p_else','semtic.py',81),
  ('elsif -> ELSIF comptn cmmd','elsif',3,'p_elsif','semtic.py',86),
  ('elsif -> ELSIF bool cmmd','elsif',3,'p_elsif','semtic.py',87),
  ('elses -> else','elses',1,'p_elses','semtic.py',92),
  ('elses -> elsif elses','elses',2,'p_elses','semtic.py',93),
  ('control -> IF comptn cmmd END','control',4,'p_contol_if','semtic.py',98),
  ('control -> IF bool cmmd END','control',4,'p_contol_if','semtic.py',99),
  ('control -> IF comptn cmmd elses END','control',5,'p_contol_if','semtic.py',100),
  ('control -> IF bool cmmd elses END','control',5,'p_contol_if','semtic.py',101),
  ('control -> UNLESS comptn COLON cmmd END','control',5,'p_control_unless','semtic.py',106),
  ('control -> UNLESS bool COLON cmmd END','control',5,'p_control_unless','semtic.py',107),
  ('control -> UNLESS comptn cmmd elses END','control',5,'p_control_unless','semtic.py',108),
  ('control -> UNLESS bool cmmd elses END','control',5,'p_control_unless','semtic.py',109),
  ('when -> WHEN objs','when',2,'p_when','semtic.py',114),
  ('when -> WHEN objs THEN','when',3,'p_when','semtic.py',115),
  ('when -> WHEN comptn','when',2,'p_when','semtic.py',116),
  ('whens -> when','whens',1,'p_whens','semtic.py',121),
  ('whens -> when whens','whens',2,'p_whens','semtic.py',122),
  ('control -> CASE ID whens else END','control',5,'p_control_case','semtic.py',127),
  ('control -> CASE ID whens END','control',4,'p_control_case','semtic.py',128),
  ('ids -> ID','ids',1,'p_ids','semtic.py',133),
  ('ids -> ID COMMA ids','ids',3,'p_ids','semtic.py',134),
  ('array -> LBRAKET objs RBRAKET','array',3,'p_array','semtic.py',138),
  ('array -> LBRAKET ids RBRAKET','array',3,'p_array','semtic.py',139),
  ('array -> LBRAKET objs COMMA ids RBRAKET','array',5,'p_array','semtic.py',140),
  ('array -> LBRAKET ids COMMA objs RBRAKET','array',5,'p_array','semtic.py',141),
  ('struc -> SET DOT NEW','struc',3,'p_struc_set','semtic.py',146),
  ('struc -> SET DOT NEW LPAREN RPAREN','struc',5,'p_struc_set','semtic.py',147),
  ('struc -> SET DOT NEW LPAREN array RPAREN','struc',6,'p_struc_set','semtic.py',148),
  ('struc -> SET array','struc',2,'p_struc_set','semtic.py',149),
  ('objs -> obj','objs',1,'p_objs','semtic.py',154),
  ('objs -> obj COMMA objs','objs',3,'p_objs','semtic.py',155),
  ('obj -> STRING','obj',1,'p_obj','semtic.py',160),
  ('obj -> num','obj',1,'p_obj','semtic.py',161),
  ('obj -> bool','obj',1,'p_obj','semtic.py',162),
  ('obj -> range','obj',1,'p_obj','semtic.py',163),
  ('obj -> matrix','obj',1,'p_obj','semtic.py',164),
  ('range -> LPAREN INT DOT DOT INT RPAREN','range',6,'p_range','semtic.py',169),
  ('range -> INT DOT DOT INT','range',4,'p_range','semtic.py',170),
  ('range -> LPAREN STRING DOT DOT STRING','range',5,'p_range','semtic.py',171),
  ('range -> STRING DOT DOT STRING','range',4,'p_range','semtic.py',172),
  ('cmmd -> var','cmmd',1,'p_cmmd','semtic.py',177),
  ('cmmd -> func','cmmd',1,'p_cmmd','semtic.py',178),
  ('cmmd -> control','cmmd',1,'p_cmmd','semtic.py',179),
  ('cmmd -> optn','cmmd',1,'p_cmmd','semtic.py',180),
  ('matrix -> LBRAKET rows RBRAKET','matrix',3,'p_matrix','semtic.py',184),
  ('rows -> row','rows',1,'p_rows','semtic.py',187),
  ('rows -> row COMMA rows','rows',3,'p_rows','semtic.py',188),
  ('row -> array','row',1,'p_row','semtic.py',191),
]
